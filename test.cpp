#include "my_utils.h"
#include <stdint.h>
#include <stdio.h>

int main() {

    StringInfo label_seed;
    //c语言中
    StringInfo *rnd1 = new StringInfo;
    StringInfo *rnd2 = new StringInfo;
    StringInfo *secret = new StringInfo;
    StringInfo *master_secret = new StringInfo;
    StringInfo *hand_shake_data = new StringInfo;
    StringInfo *out = new StringInfo;


    const char *usage = "key expansion";
    //输出usage
    // number是协商后确定的套件
    // 根据number确定套件...
    const SslCipherSuite *cs = ssl_find_cipher(0xC02F);

    hand_shake_data->data = convertHexStringToUCharArray(
        "0100020a030366a67e9f6c16ffdf3622cdde89e62ef3112c79983d08352e67d859ad30b1d29720eb7f7357d1323c4507bf3105dc34ebad7ab069a1aefe4903a38935472b8dc66e00205a5a130113021303c02bc02fc02cc030cca9cca8c013c014009c009d002f0035010001a13a3a0000001b0003020002002d00020101001200000010000e000c02683208687474702f312e3100050005010000000000230000000d0012001004030804040105030805050108060601001700000033002b0029baba000100001d0020e5399b13a57960a8fefe01323147b1a07bd0671349ded8b316f41419081c4241fe0d00da00000100011a0020e5399b13a57960a8fefe01323147b1a07bd0671349ded8b316f41419081c424100b0da903fb2dab5246459d3c68106df7d28070d67a14a163db73f2da28d35a411e8214ec845e2285f4b63e0f1699ff368f7ae64183d02b26593940a4faa53d13e1d3da84e7d4a604dbbc747851d97796ab51d9edd97939280b78ee34f0ad616dbde586693560538c2849e808b725c2c1e8732966751405a17eecfc30a1237f4af380c8d96cdc6057296c97aa916a950819769dcd636e93234426a7de57f79fa23aed08cdf04329872de169e5282f73bdcfa000a00060004baba001d44690005000302683200000014001200000f6d656d6f2e3939363131392e78797a000b00020100ff01000100002b0007061a1a030403035a5a0001000200005003030a38e537841158e3d25a69314826eec0175d221754b592dba20d881a577a9efb00c02f000028ff0100010000000000000b000403000102002300000010000b000908687474702f312e31001700000b000a1c000a190004f9308204f5308203dda0030201020212048dc5649eb7fb6ab8c681671db27c38f8b3300d06092a864886f70d01010b05003032310b300906035504061302555331163014060355040a130d4c6574277320456e6372797074310b3009060355040313025233301e170d3234303630323135323532355a170d3234303833313135323532345a30173115301306035504030c0c2a2e3939363131392e78797a30820122300d06092a864886f70d01010105000382010f003082010a0282010100c38c8bcef34a1cb59cb68d2037b118d0b3f15726c32f29572d7269c3e40e4e8f2be0b62df7316301ecf69da8db33a021d81ac732953ed55b686689c41193c2535e49544a390363545bd0637dfa0669b7dce91266dc9c8b6c690367e9d5876ee8d2a25f9942885d2ff5a265aa1052de2443c7bc80d589ee37bc915108ceced29d38f2b82b76a296b7d1f79ceca6070debaeb95e9dcfd3d70e4e38cb7b8f2b93a636750352e1fc3d19c7b74df326d3cd7842d60387e301932283a683327b30078c6a7248f1ddd850f4b7e103c432458bf13ab82e787234898fe41feb618b6f75da6edd06d5e7d587a901bf3ae1b1ee6934f52b8035044e1471938d14906917ad930203010001a382021e3082021a300e0603551d0f0101ff0404030205a0301d0603551d250416301406082b0601050507030106082b06010505070302300c0603551d130101ff04023000301d0603551d0e04160414514220ecc6c29d2abeb9d75a1d906dafd7f59482301f0603551d23041830168014142eb317b75856cbae500940e61faf9d8b14c2c6305506082b0601050507010104493047302106082b060105050730018615687474703a2f2f72332e6f2e6c656e63722e6f7267302206082b060105050730028616687474703a2f2f72332e692e6c656e63722e6f72672f30290603551d1104223020820c2a2e3939363131392e78797a82102a2e6461762e3939363131392e78797a30130603551d20040c300a3008060667810c01020130820102060a2b06010401d6790204020481f30481f000ee0075003f174b4fd7224758941d651c84be0d12ed90377f1f856aebc1bf2885ecf8646e0000018fd9c52044000004030046304402204fcb41787190286bcf14c1918396773c0115bd3784c70be80b412915f3f55b1802200cf37ee5c82172fc7372145e80c9d13fa90de9413f6fe9b568950b64e38b026f0075001998107109f0d6522e3080d29e3f64bb836e28ccf90f528eeedfce4a3f16b4ca0000018fd9c520af00000403004630440220468c2e210b66605bdc831e7494c85fb7b0e9816225def580901e5048dd466a45022055326ee6ce8129da73110fc5063ec691acaac75b078b2dbf0645ef1a485fca85300d06092a864886f70d01010b05000382010100ad5e6a59fa0acd6431ca68314c74ba71e9cbd8b83ce73adfd37f80a931802d42bfb76dc5106a841246bdd616e51e053c6297377ef851b301d741e7c1115392e6ac91b7f9f5abfc69a31ffb0f1f8381cea6d7c933837f2c446acf6a7af6de1926d0eef40d9db895e87dfef09c9cb81a84e93fdcd141caa4d472c71e46798c209068cec941f43dd21a88a5082ba895e7263ee8832063363c2efd6f0c4b16d3d9e4f89e69190c7e75bd6a07a591bd12792b040e3c41765277d5de9f2a54effd52be6b5100546d27a14d3201976bed0f99664de68c00f8b42ac42d6659d45e08cccdb2b836e4249d56e77f8a98c0f431b26657ada36a2aa6f2b0e8ea48027b2fc5c400051a30820516308202fea003020102021100912b084acf0c18a753f6d62e25a75f5a300d06092a864886f70d01010b0500304f310b300906035504061302555331293027060355040a1320496e7465726e65742053656375726974792052657365617263682047726f7570311530130603550403130c4953524720526f6f74205831301e170d3230303930343030303030305a170d3235303931353136303030305a3032310b300906035504061302555331163014060355040a130d4c6574277320456e6372797074310b300906035504031302523330820122300d06092a864886f70d01010105000382010f003082010a0282010100bb021528ccf6a094d30f12ec8d5592c3f882f199a67a4288a75d26aab52bb9c54cb1af8e6bf975c8a3d70f4794145535578c9ea8a23919f5823c42a94e6ef53bc32edb8dc0b05cf35938e7edcf69f05a0b1bbec094242587fa3771b313e71cace19befdbe43b45524596a9c153ce34c852eeb5aeed8fde6070e2a554abb66d0e97a540346b2bd3bc66eb66347cfa6b8b8f572999f830175dba726ffb81c5add286583d17c7e709bbf12bf786dcc1da715dd446e3ccad25c188bc60677566b3f118f7a25ce653ff3a88b647a5ff1318ea9809773f9d53f9cf01e5f5a6701714af63a4ff99b3939ddc53a706fe48851da169ae2575bb13cc5203f5ed51a18bdb150203010001a382010830820104300e0603551d0f0101ff040403020186301d0603551d250416301406082b0601050507030206082b0601050507030130120603551d130101ff040830060101ff020100301d0603551d0e04160414142eb317b75856cbae500940e61faf9d8b14c2c6301f0603551d2304183016801479b459e67bb6e5e40173800888c81a58f6e99b6e303206082b0601050507010104263024302206082b060105050730028616687474703a2f2f78312e692e6c656e63722e6f72672f30270603551d1f0420301e301ca01aa0188616687474703a2f2f78312e632e6c656e63722e6f72672f30220603551d20041b30193008060667810c010201300d060b2b0601040182df13010101300d06092a864886f70d01010b0500038202010085ca4e473ea3f7854485bcd56778b29863ad754d1e963d336572542d81a0eac3edf820bf5fccb77000b76e3bf65e94dee4209fa6ef8bb203e7a2b5163c91ceb4ed3902e77c258a47e6656e3f46f4d9f0ce942bee54ce12bc8c274bb8c1982fa2afcd71914a08b7c8b8237b042d08f908573e83d904330a472178098227c32ac89bb9ce5cf264c8c0be79c04f8e6d440c5e92bb2ef78b10e1e81d4429db5920ed63b921f81226949357a01d6504c10a22ae100d4397a1181f7ee0e08637b55ab1bd30bf876e2b2aff214e1b05c3f51897f05eacc3a5b86af02ebc3b33b9ee4bdeccfce4af840b863fc0554336f668e136176a8e99d1ffa540a734b7c0d063393539756ef2ba76c89302e9a94b6c17ce0c02d9bd81fb9fb768d40665b3823d7753f88e7903ad0a3107752a43d8559772c4290ef7c45d4ec8ae468430d7f2855f18a179bbe75e708b07e18693c3b98fdc6171252aafdfed255052688b92dce5d6b5e3da7dd0876c842131ae82f5fbb9abc889173de14ce5380ef6bd2bbd968114ebd5db3d20a77e59d3e2f858f95bb848cdfe5c4f1629fe1e5523afc811b08dea7c9390172ffdaca20947463ff0e9b0b7ff284d6832d6675e1e69a393b8f59d8b2f0bd25243a66f3257654d3281df3853855d7e5d6629eab8dde495b5cdb5561242cdc44ec6253844506decce005518fee94964d44eca979cb45bc073a8abb847c20c00012803001d20e2dc1f68dd0f2aaff0334b3b5060ffcd2c0d5e805eb4a117789397fb14e875500804010047e813e6b242b0f6dd6c0964c5eee65ec6b3a697bab5997376775cccbfad08e89fbe68212fdb1164344d3dfbd4aaf8105cd77f488f7b341f3063d1d498a01a8e5d3b9e95409103a4e2aef553d64c7a05fb6fc7a1265cbe3eda7aaadb5968d19f8d3d4c77eaae45b590c0080264da4ae441a62c99b2c4c0e084130a54678a03e40163c5f62f7ae4e5fe4e58a3e24843c4a269a9f520c07647f95e668f2fddc7f5c19a894058f7cef555c0b8e2c18772d8543afe2494729685f65e2507f6fa22fa7ea74ce94c9b0616e1ac013690b0af3b863dda7ac786e9a5520ee61344ea102a2f014867206c46ffdf6094b7391d228baf59ed78428b36c2c43a7f6e59cc94640e0000001000002120e5399b13a57960a8fefe01323147b1a07bd0671349ded8b316f41419081c4241");
    // "ss00020a0303");
    hand_shake_data->data_len = 3543;
    //输出hand_shake_data的长度


    printf("hand_shake_data->data_len %d\n", hand_shake_data->data_len);

    // 需要转换为16进制
    rnd1->data = convertHexStringToUCharArray(
        "0a38e537841158e3d25a69314826eec0175d221754b592dba20d881a577a9efb");
    secret->data = convertHexStringToUCharArray(
        "99b133665bed69448012c527841e64c8ba5c57ba7b70921d3c9d9441a12cdc68");
    rnd2->data = convertHexStringToUCharArray(
        "66a67e9f6c16ffdf3622cdde89e62ef3112c79983d08352e67d859ad30b1d297");
    
    rnd1->data_len = strlen(reinterpret_cast<const char *>(rnd1->data));
    //输出rnd1的长度
    printf("rnd1->data_len %d\n", rnd1->data_len);
    rnd2->data_len = strlen(reinterpret_cast<const char *>(rnd2->data));
    secret->data_len = strlen((char *)secret->data);
    // 先是usage，然后是rnd1，然后是rnd2
    // rnd1是server_random，rnd2是client_random
    //  printf("secret->data_len %d\n", secret->data_len);

    //
    // generate_material

    

    StringInfo *hashdata = new StringInfo;


    gint ret = tls12_handshake_hash(hand_shake_data,GCRY_MD_SHA256,hashdata);

    //输出hashdata
    ssl_print_data("hashdata", hashdata->data, hashdata->data_len);

    //根据handshake的hashdata生成master_secret
    tls12_prf(GCRY_MD_SHA256,secret, "extended master secret", hashdata, NULL, master_secret,48);
    //输出在 同目录下 ssl_dubug_file.txt

    generate_key_material(cs, master_secret, usage, rnd1, rnd2, out);


    return 0;
}


// sudo apt-get install libgcrypt20-dev
// gcc -o test test.cpp -lgcrypt
// md=8
// git push -u origin main
